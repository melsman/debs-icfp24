name: CI

# Controls when the workflow will run
on:
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        codegen: ["amd64", "c", "llvm"]
        cc: ["gcc", "clang"]
        exclude:
          - os: ubuntu-latest
            codegen: "amd64"
            cc: "clang"
          - os: macos-latest
            cc: "gcc"
          - codegen: "llvm"
            cc: "gcc"

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install dependencies (ubuntu)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          sudo apt-get update
          sudo apt-get install mlton
          if [[ "${{ matrix.codegen }}" == "llvm" ]]; then sudo apt-get install llvm; fi
      - name: Install dependencies (macos)
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: |
          brew update
          brew install mlton
          echo "$(brew --prefix llvm)/bin" >> $GITHUB_PATH
          echo "WITH_GMP_DIR=/usr/local" >> $GITHUB_ENV

      - name: Check versions
        run: |
          mlton
          echo
          make -version
          echo
          ${{ matrix.cc }} --version
          echo
          if [[ "${{ matrix.codegen }}" == "llvm" ]]; then llvm-as -version; opt -version; llc -version; fi

      - name: Build
        run: |
          make \
            CC="${{ matrix.cc }}" \
            OLD_MLTON_RUNTIME_ARGS="ram-slop 0.90" \
            MLTON_RUNTIME_ARGS="ram-slop 0.90" \
            MLTON_COMPILE_ARGS="-codegen ${{ matrix.codegen }}" \
            $( if [[ -n "$WITH_GMP_DIR" ]]; then echo "WITH_GMP_DIR=$WITH_GMP_DIR"; fi ) \
            WITH_ALL_RUNTIME=true \
            WITH_DBG_RUNTIME=false \
            all

      - name: Test
        run: ./bin/regression -codegen ${{ matrix.codegen }}

  build-test-windows:
    runs-on: windows-latest
    env:
      MSYSTEM: MINGW64
      MSYS2_PATH_TYPE: inherit
    steps:
      - name: Config git
        run: |
          git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - name: Install dependencies (windows)
        run: |
          echo "PWD=$(c:\msys64\usr\bin\cygpath -u $(pwd))" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "$(pwd)/old-mlton/mlton-20200817-amd64-mingw/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          mkdir old-mlton && cd old-mlton
          curl.exe -L https://github.com/MLton/mlton/releases/download/on-20200817-release/mlton-20200817-amd64-mingw.tgz --output old-mlton.tgz
          7z x old-mlton.tgz
          7z x old-mlton.tar
      - name: Check versions (windows)
        run: |
          c:\msys64\usr\bin\bash -l -c "mlton"
      - name: Build (windows)
        run: c:\msys64\usr\bin\bash -l -c "cd $env:PWD && make OLD_MLTON_RUNTIME_ARGS='ram-slop 0.90' MLTON_RUNTIME_ARGS='ram-slop 0.90' MLTON_COMPILE_ARGS='-codegen amd64' WITH_DBG_RUNTIME=false all"
      - name: Test (windows)
        run: c:\msys64\usr\bin\bash -l -c "cd $env:PWD && ./bin/regression -codegen amd64"
