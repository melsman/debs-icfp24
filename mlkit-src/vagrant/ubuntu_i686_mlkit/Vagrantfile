# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

ENV["LC_ALL"] = "C"

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/xenial32"
#  config.vm.box = "ubuntu/trusty32"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
      # Customize the amount of memory on the VM:
    vb.memory = "4096"

    # Basebox ubuntu/xenial64 comes with following Vagrantfile config and causes https://github.com/joelhandwell/ubuntu_vagrant_boxes/issues/1
    # vb.customize [ "modifyvm", :id, "--uart1", "0x3F8", "4" ]
    # vb.customize [ "modifyvm", :id, "--uartmode1", "file", File.join(Dir.pwd, "ubuntu-xenial-16.04-cloudimg-console.log") ]
    # following config will address the issue
    vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  config.push.define "atlas" do |push|
    push.app = "melsman/ubuntu_1604_i686_mlkit"
  end

  # The following line needs to be commented out on the first "vagrant up" launch;
  # then, before running "vagrant package", the line should be uncommented.
  config.ssh.username = "vagrant"

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
     # bring the machine up-to-date
     sudo apt-get update
     sudo apt-get -y upgrade

     # install some utilities
     sudo apt-get -y install emacs
     sudo apt-get -y install autoconf
     sudo apt-get -y install mlton
     sudo apt-get -y install git
     sudo apt-get -y install bison
     sudo apt-get -y install flex
     sudo apt-get -y install make

     #sudo apt-get -y install texlive-latex-base

     # create vagrant user, which is not present in the xenial32 box...
     adduser --disabled-password --gecos "" vagrant
     echo 'vagrant:vagrant' | chpasswd
     cp /etc/sudoers.d/90-cloud-init-users /etc/sudoers.d/90-vagrant-user
     sed -i 's/ubuntu/vagrant/g' /etc/sudoers.d/90-vagrant-user
     mkdir /home/vagrant/.ssh
     cp /home/ubuntu/.ssh/authorized_keys /home/vagrant/.ssh/
     chown -R vagrant:vagrant /home/vagrant/.ssh/
     chmod 600 /home/vagrant/.ssh/authorized_keys
     chmod 700 /home/vagrant/.ssh/

     # install mlkit
     cd /home/vagrant
     sudo rm -rf mlkit
     sudo -u vagrant git clone https://github.com/melsman/mlkit.git mlkit
     cd mlkit
     sudo -u vagrant ./autobuild
     sudo -u vagrant ./configure
     sudo -u vagrant make mlkit
     sudo -u vagrant make mlkit_libs
     sudo make install

     # install smltojs
     sudo -u vagrant ./configure --with-compiler=mlkit
     sudo -u vagrant make smltojs
     sudo -u vagrant make smltojs_basislibs
     sudo make install_smltojs

  SHELL
end
